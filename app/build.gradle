plugins {
    id 'com.android.library'
    id 'kotlin-android'
}
apply from: '../gradle/publish.gradle'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
//        applicationId "com.example.myapplication"
        minSdkVersion 16
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        project.archivesBaseName = "msal"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    libraryVariants.all { variant ->
        variant.outputs.all {
            def fileName = "${archivesBaseName}-${version}.aar"
            outputFileName = fileName
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    String supportLibVersion = '28.0.0'
    implementation "com.android.support:support-v4:${supportLibVersion}"
    implementation "com.android.support:support-compat:${supportLibVersion}"
    implementation "com.android.support:support-core-ui:${supportLibVersion}"
    implementation "com.android.support:support-core-utils:${supportLibVersion}"
    implementation "com.android.support:support-fragment:${supportLibVersion}"
    implementation "com.android.support:appcompat-v7:$supportLibVersion"

    implementation "com.android.support:recyclerview-v7:$supportLibVersion"

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

//    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
}

/*********************************************************maven upload**************************************************************/
//def GROUP_ID = "com.jingjinggu.library"
//def ARTIFACT_ID = "bluepoint"
//def VERSION = "0.0.8"
//def MAVEN_GROUP_URL = ""
//
//// Task to generate javadoc
//task javadoc(type: Javadoc) {
//    failOnError false
//    source = android.sourceSets.main.java.srcDirs
//    classpath += configurations.compile
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//
//    options.memberLevel = JavadocMemberLevel.PUBLIC
//    options.addStringOption('Xdoclint:none', '-quiet')
//
//    exclude '**/BuildConfig.Java'
//    exclude '**/R.java'
//    destinationDir = reporting.file("$project.buildDir/outputs/jar/javadoc/")
//}
//
//// Task to generate javadoc.jar
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    from javadoc.destinationDir
//    classifier 'javadoc'
//    destinationDirectory = reporting.file("$project.buildDir/outputs/jar/")
//}
//
//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier 'sources'
//    destinationDirectory = reporting.file("$project.buildDir/outputs/jar/")
//}
//
//publishing {
//    publications {
//        msal(MavenPublication) {
//            groupId 'com.microsoft.identity.client'
//            artifactId 'msal'
//            //Edit the 'version' here for VSTS RC build
//            version = project.version
//
//            pom.withXml {
//                // Custom values
//
//                // Name
//                asNode().appendNode('name', 'msal')
//
//                // Description
//                asNode().appendNode(
//                        'description',
//                        'Microsoft Identity library for Android gives you the ability to add authentication to your application with just a few lines of additional code. Using our MSAL SDKs you can quickly and easily extend your existing application to all the employees that use MSA, B2C, Azure AD and Active Directory on-premises using Active Directory Federation Services, including Office365 customers.'
//                )
//
//                // URL
//                asNode().appendNode('url', 'https://github.com/AzureAD/microsoft-authentication-library-for-android')
//
//                // Inception Year
//                asNode().appendNode('inceptionYear', '2016')
//
//                // Licenses
//                asNode().appendNode('licenses').appendNode('license').appendNode('name', 'MIT License')
//
//                // Developers
//                def developerNode = asNode().appendNode('developers').appendNode('developer')
//                developerNode.appendNode('id', 'microsoft')
//                developerNode.appendNode('name', 'Microsoft')
//
//                // SCM
//                asNode().appendNode('scm').appendNode('url', 'https://github.com/AzureAD/microsoft-authentication-library-for-android/tree/master')
//
//                // Properties
//                def propertiesNode = asNode().appendNode('properties')
//                propertiesNode.appendNode('branch', 'master')
//                propertiesNode.appendNode('version', project.version)
//
//                def dependenciesNode = asNode().appendNode('dependencies')
//
//
//                def deps = configurations.implementation.allDependencies.asList()
//                if (project.version.toString().endsWith("SNAPSHOT")) {
//                    deps.addAll(configurations.snapshotApi.allDependencies.asList())
//                } else {
//                    deps.addAll(configurations.distApi.allDependencies.asList())
//                }
//
//                //Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
//                deps.each {
//                    if (it.group != null && it.name != null) {
//                        def dependencyNode = dependenciesNode.appendNode('dependency')
//                        dependencyNode.appendNode('groupId', it.group)
//                        dependencyNode.appendNode('artifactId', it.name)
//                        dependencyNode.appendNode('version', it.version)
//                    }
//                }
//
//            }
//
//            artifact(sourcesJar)
//            artifact(javadocJar)
//            artifact("$buildDir/outputs/aar/msal-${project.version}.aar")
//        }
//
//    }
//
//    // Repositories to which Gradle can publish artifacts
//    repositories {
//        maven {
//            name "vsts-maven-adal-android"
//            url "https://identitydivision.pkgs.visualstudio.com/_packaging/AndroidADAL/maven/v1"
//            credentials {
//                username System.getenv("ENV_VSTS_MVN_ANDROID_MSAL_USERNAME") != null ? System.getenv("ENV_VSTS_MVN_ANDROID_MSAL_USERNAME") : project.findProperty("vstsUsername")
//                password System.getenv("ENV_VSTS_MVN_ANDROID_MSAL_ACCESSTOKEN") != null ? System.getenv("ENV_VSTS_MVN_ANDROID_MSAL_ACCESSTOKEN") : project.findProperty("vstsMavenAccessToken")
//            }
//        }
//    }
//}